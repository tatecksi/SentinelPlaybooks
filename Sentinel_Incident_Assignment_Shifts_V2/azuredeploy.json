{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "2.0.0.0",
    "metadata":{
        "comments": "This playbook will assign Incident owner based on Shifts list in Teams.",
        "author": "Jeremy Tan"
    },
       "parameters": {
        "PlaybookName": {
            "defaultValue": "Sentinel_Incident_Assignment_Shifts",
            "type": "String"
        },
        "EmailAddress": {
            "defaultValue": "Your email address",
            "type": "string"
        }         
    },
    "variables": {
        "azuread": "[concat('azuread-', parameters('PlaybookName'))]",
        "AzureMonitorLogs": "[concat('azuremonitorlogs-', parameters('PlaybookName'))]",
        "AzureSentinel": "[concat('azuresentinel-', parameters('PlaybookName'))]",
        "office365": "[concat('office365-', parameters('PlaybookName'))]",
        "Shifts": "[concat('shifts-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('azuread')]",
            "location": "[resourceGroup().location]",
            "properties": {
                        "displayName": "[parameters('EmailAddress')]",
                        "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuread')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureMonitorLogs')]",
            "location": "[resourceGroup().location]",
            "properties": {
                        "displayName": "[parameters('EmailAddress')]",
                        "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinel')]",
            "location": "[resourceGroup().location]",
            "properties": {
                        "displayName": "[parameters('EmailAddress')]",
                        "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('office365')]",
            "location": "[resourceGroup().location]",
            "properties": {
                        "displayName": "[parameters('EmailAddress')]",
                        "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('Shifts')]",
            "location": "[resourceGroup().location]",
            "properties": {
                        "displayName": "[parameters('EmailAddress')]",
                        "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/shifts')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('azuread'))]",
                "[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogs'))]",
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinel'))]",
                "[resourceId('Microsoft.Web/connections', variables('office365'))]",
                "[resourceId('Microsoft.Web/connections', variables('Shifts'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_Azure_Sentinel_incident_creation_rule_was_triggered_(Private_Preview_only)": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Condition_-_Check_User_Array": {
                            "actions": {
                                "Compose_-_User_Array": {
                                    "runAfter": {},
                                    "type": "Compose",
                                    "inputs": "@variables('User')"
                                },
                                "Compose_HTML": {
                                    "runAfter": {
                                        "Update_incident": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": "<!DOCTYPE html>\n<html>\n<head>    \n<style>\n.header-Informational{background-color: grey;color: white;}.header-Low{background-color: yellow;color: black;}.header-Medium{background-color: orange;color: black;}.header-High{background-color: red;color: white;}\nspan{display: none;}.severity-1{display: inline;text-decoration:none;}\n{display: inline;text-decoration:none;}.cell{float: left;overflow: hidden;text-overflow: ellipsis;white-space: nowrap; max-width: 100%;}\n</style>\n</head>\n<body>\n<table class=\"header-@{triggerBody()?['object']?['properties']?['severity']}\" style=\"table-layout: auto; width: 100%; padding-left: 10px; padding-right:10px;font-size:20px\" ><tr>\n<td class=\"align-middle\" height=\"50\" align=\"left\" style=\"width: 20%;\">Severity:<b><i>@{triggerBody()?['object']?['properties']?['severity']}</b></i></td>\n<td class=\"align-middle\" height=\"50\" align=\"left\" style=\"width: 75%;\">Title: <b><i>@{triggerBody()?['object']?['properties']?['title']}</b></i></td></tr><tr>\n</table>\n<div style=\"margin-top: 20px\">\n\n   The following incident in Azure Sentinel has been assigned to <b>@{body('Get_user')?['displayName']}</b>.\n\n\n   <h1>Incident Details:</h1>\n\n   <b>Incident Number:</b> @{triggerBody()?['object']?['properties']?['incidentNumber']}<br />\n   <b>Title:</b> @{triggerBody()?['object']?['properties']?['title']} <br />\n   <b>Owner:</b> @{body('Get_user')?['displayName']}<br />\n   <b>Severity:</b> @{triggerBody()?['object']?['properties']?['severity']}<br />\n   <b>TimeGenerated(UTC):</b> @{triggerBody()?['object']?['properties']?['createdTimeUtc']} <br />\n   <b>Status:</b> @{triggerBody()?['object']?['properties']?['status']} <br />\n   <br />\n   <b>Incident link:</b> <a href=\"https://portal.azure.com/#asset/Microsoft_Azure_Security_Insights/Incident@{triggerBody()?['object']?['id']}\">View Incident</a><br />\n\n   </body>\n   </html>\n\n"
                                },
                                "Get_user": {
                                    "runAfter": {
                                        "Set_User_ID": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuread']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/v1.0/users/@{encodeURIComponent(variables('UserID'))}"
                                    }
                                },
                                "Parse_query_result": {
                                    "runAfter": {
                                        "Run_query_and_list_results_-_Get_user_with_low_assignment_": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('Run_query_and_list_results_-_Get_user_with_low_assignment_')?['value']",
                                        "schema": {
                                            "items": {
                                                "properties": {
                                                    "Count": {
                                                        "type": "integer"
                                                    },
                                                    "User": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "User",
                                                    "Count"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    }
                                },
                                "Run_query_and_list_results_-_Get_user_with_low_assignment_": {
                                    "runAfter": {
                                        "Compose_-_User_Array": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "let ShiftUsers= datatable(User:string)\n@{outputs('Compose_-_User_Array')}\n| distinct User;\nSecurityIncident\n| extend UserID = tostring(parse_json(Owner).objectId)\n| where isnotempty(UserID)\n| distinct IncidentName, UserID\n| summarize count() by UserID\n| join kind=rightouter ShiftUsers on $left.UserID == $right.User\n| project User, Count=iif(isempty(count_),0,count_)\n| sort by User\n| top 1 by Count asc\n",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/queryData",
                                        "queries": {
                                            "resourcegroups": "@triggerBody()?['workspaceInfo']?['ResourceGroupName']",
                                            "resourcename": "@triggerBody()?['workspaceInfo']?['WorkspaceName']",
                                            "resourcetype": "Log Analytics Workspace",
                                            "subscriptions": "@triggerBody()?['workspaceInfo']?['SubscriptionId']",
                                            "timerange": "Last 24 hours"
                                        }
                                    }
                                },
                                "Send_an_email_(V2)": {
                                    "runAfter": {
                                        "Compose_HTML": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "Body": "<p>@{outputs('Compose_HTML')}</p>",
                                            "Subject": "Azure Sentinel Incident Assignment Notification - Incident Number: @{triggerBody()?['object']?['properties']?['incidentNumber']}",
                                            "To": "@body('Get_user')?['userPrincipalName']"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['office365']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/v2/Mail"
                                    }
                                },
                                "Set_User_ID": {
                                    "foreach": "@body('Parse_query_result')",
                                    "actions": {
                                        "Set_variable": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "UserID",
                                                "value": "@items('Set_User_ID')['User']"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Parse_query_result": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "Update_incident": {
                                    "runAfter": {
                                        "Get_user": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                            "owner": "@body('Get_user')?['id']",
                                            "ownerAction": "Assign"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "put",
                                        "path": "/Incidents"
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('User'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "For_each": {
                            "foreach": "@body('Parse_Shifts_List')",
                            "actions": {
                                "Condition_-_StartDate_and_EndDate": {
                                    "actions": {
                                        "Append_to_array_variable": {
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "User",
                                                "value": "@items('For_each')['userId']"
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "expression": {
                                        "and": [
                                            {
                                                "lessOrEquals": [
                                                    "@ticks(formatDateTime(items('For_each')?['sharedShift']?['startDateTime']))",
                                                    "@ticks(formatDateTime(utcNow()))"
                                                ]
                                            },
                                            {
                                                "greaterOrEquals": [
                                                    "@ticks(formatDateTime(items('For_each')?['sharedShift']?['endDateTime']))",
                                                    "@ticks(formatDateTime(addHours(utcNow(),variables('ExpectedWorkHoursPerIncident'))))"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "Parse_Shifts_List": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Initialize_variable_-_ExpectedWorkHoursPerIncident": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ExpectedWorkHoursPerIncident",
                                        "type": "integer",
                                        "value": 1
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_User": {
                            "runAfter": {
                                "Initialize_variable_-_ExpectedWorkHoursPerIncident": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "User",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_UserID": {
                            "runAfter": {
                                "Initialize_variable_-_User": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "UserID",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "List_all_shifts": {
                            "runAfter": {
                                "Initialize_variable_-_UserID": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['shifts']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/v1.0/teams/@{encodeURIComponent('0805b054-13e5-4833-9d25-2c8932175a32')}/schedule/shifts",
                                "queries": {
                                    "endTime": "@{addDays(utcNow(),1)}",
                                    "startTime": "@{addDays(utcNow(),-1)}"
                                }
                            }
                        },
                        "Parse_Shifts_List": {
                            "runAfter": {
                                "List_all_shifts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('List_all_shifts')?['value']",
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "@@odata.etag": {
                                                "type": "string"
                                            },
                                            "createdDateTime": {},
                                            "draftShift": {},
                                            "id": {
                                                "type": "string"
                                            },
                                            "lastModifiedBy": {
                                                "properties": {
                                                    "application": {},
                                                    "conversation": {},
                                                    "device": {},
                                                    "user": {
                                                        "properties": {
                                                            "displayName": {
                                                                "type": "string"
                                                            },
                                                            "id": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "lastModifiedDateTime": {
                                                "type": "string"
                                            },
                                            "schedulingGroupId": {
                                                "type": "string"
                                            },
                                            "sharedShift": {
                                                "properties": {
                                                    "activities": {
                                                        "type": "array"
                                                    },
                                                    "displayName": {},
                                                    "endDateTime": {
                                                        "type": "string"
                                                    },
                                                    "notes": {},
                                                    "startDateTime": {
                                                        "type": "string"
                                                    },
                                                    "theme": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "userId": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "@@odata.etag",
                                            "id",
                                            "createdDateTime",
                                            "lastModifiedDateTime",
                                            "schedulingGroupId",
                                            "userId",
                                            "draftShift",
                                            "lastModifiedBy",
                                            "sharedShift"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuread": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('azuread'))]",
                                "connectionName": "[variables('azuread')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuread')]"
                            },
                            "azuremonitorlogs": {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogs'))]",
                                "connectionName": "[variables('AzureMonitorLogs')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                                    
                            },
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinel'))]",
                                "connectionName": "[variables('AzureSentinel')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                               
                            },
                            "office365": { 
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('office365'))]",
                                "connectionName": "[variables('office365')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                                    
                            },
                            "shifts": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('Shifts'))]",
                                "connectionName": "[variables('Shifts')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/shifts')]"
                                
                            }
                        }
                    }
                }
            }
        }
    ]
}
