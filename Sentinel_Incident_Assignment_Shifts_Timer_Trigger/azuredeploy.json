{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata":{
        "comments": "This playbook will assign Incident owner based on Shifts list in Teams.",
        "author": "Jeremy Tan"
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Sentinel_Incident_Assignment_Shifts_Timer_Trigger",
            "type": "String"
        },
        "EmailAddress": {
            "defaultValue": "Your email address",
            "type": "string"
        },
        "Azure Sentinel Subscription ID": {
            "defaultValue": "Subscription ID",
            "type": "string"
        },
        "Azure Sentinel Resource Group": {
            "defaultValue": "Resource Group Name",
            "type": "string"
        },
        "Azure Sentinel Workspace Name": {
            "defaultValue": "Workspace Name",
            "type": "string"
        }       
    },
    "variables": {
        "AzureMonitorLogs": "[concat('azuremonitorlogs-', parameters('PlaybookName'))]",
        "AzureSentinel": "[concat('azuresentinel-', parameters('PlaybookName'))]",
        "office365": "[concat('office365-', parameters('PlaybookName'))]",
        "Shifts": "[concat('shifts-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureMonitorLogs')]",
            "location": "[resourceGroup().location]",             
            "properties": {
                        "displayName": "[parameters('EmailAddress')]",
                        "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinel')]",
            "location": "[resourceGroup().location]",
            "properties": {
                        "displayName": "[parameters('EmailAddress')]",
                        "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('office365')]",
            "location": "[resourceGroup().location]",
            "properties": {
                        "displayName": "[parameters('EmailAddress')]",
                        "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('Shifts')]",
            "location": "[resourceGroup().location]",
            "properties": {
                        "displayName": "[parameters('EmailAddress')]",
                        "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/shifts')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 5
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Condition_-_Check_IncidentList_is_not_empty": {
                            "actions": {
                                "Condition_-_Check_User_Array_is_not_empty": {
                                    "actions": {
                                        "For_each_IncidentList": {
                                            "foreach": "@variables('IncidentList')",
                                            "actions": {
                                                "Compose": {
                                                    "runAfter": {},
                                                    "type": "Compose",
                                                    "inputs": "@{variables('LoopIndex')}\n\nLength:@{length(body('Run_query_and_list_results_-_Get_user_with_assignment')?['value'])}"
                                                },
                                                "Compose_HTML_Email": {
                                                    "runAfter": {
                                                        "Update_incident": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Compose",
                                                    "inputs": "<!DOCTYPE html>\n<html>\n<head>    \n<style>\n.header-Informational{background-color: grey;color: white;}.header-Low{background-color: yellow;color: black;}.header-Medium{background-color: orange;color: black;}.header-High{background-color: red;color: white;}\nspan{display: none;}.severity-1{display: inline;text-decoration:none;}\n{display: inline;text-decoration:none;}.cell{float: left;overflow: hidden;text-overflow: ellipsis;white-space: nowrap; max-width: 100%;}\n</style>\n</head>\n<body>\n<table class=\"header-@{body('Update_incident')?['properties']?['severity']}\" style=\"table-layout: auto; width: 100%; padding-left: 10px; padding-right:10px;font-size:20px\" ><tr>\n<td class=\"align-middle\" height=\"50\" align=\"left\" style=\"width: 20%;\">Severity:<b><i>@{body('Update_incident')?['properties']?['severity']}</b></i></td>\n<td class=\"align-middle\" height=\"50\" align=\"left\" style=\"width: 75%;\">Title: <b><i>@{body('Update_incident')?['properties']?['title']}</b></i></td></tr><tr>\n</table>\n<div style=\"margin-top: 20px\">\n\n  The following incident in Azure Sentinel has been assigned to <b>@{body('Update_incident')?['properties']?['owner']?['assignedTo']}</b>.\n\n\n  <h1>Incident Details:</h1>\n\n  <b>Incident Number:</b> @{body('Update_incident')?['properties']?['incidentNumber']} <br />\n  <b>Title:</b> @{body('Update_incident')?['properties']?['title']} <br />\n  <b>Owner:</b> @{body('Update_incident')?['properties']?['owner']?['assignedTo']} <br />\n  <b>Severity:</b> @{body('Update_incident')?['properties']?['severity']}<br />\n  <b>TimeGenerated(UTC):</b> @{body('Update_incident')?['properties']?['createdTimeUtc']} <br />\n  <b>Status:</b> @{body('Update_incident')?['properties']?['status']} <br />\n  <br />\n  <b>Incident link:</b> <a href=\"https://portal.azure.com/#asset/Microsoft_Azure_Security_Insights/Incident@{body('Update_incident')?['id']}\">View Incident</a><br />\n\n  </body>\n  </html>\n\n"
                                                },
                                                "Condition_-_Check_LoopIndex": {
                                                    "actions": {
                                                        "Set_variable_-_LoopIndex": {
                                                            "runAfter": {},
                                                            "type": "SetVariable",
                                                            "inputs": {
                                                                "name": "LoopIndex",
                                                                "value": 0
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Send_an_email_(V2)": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "else": {
                                                        "actions": {
                                                            "Increment_variable_-_LoopIndex": {
                                                                "runAfter": {},
                                                                "type": "IncrementVariable",
                                                                "inputs": {
                                                                    "name": "LoopIndex",
                                                                    "value": 1
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "@variables('LoopIndex')",
                                                                    "@sub(length(body('Run_query_and_list_results_-_Get_user_with_assignment')?['value']),1)"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "Send_an_email_(V2)": {
                                                    "runAfter": {
                                                        "Compose_HTML_Email": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "Body": "<p>@{outputs('Compose_HTML_Email')}</p>",
                                                            "Subject": "Azure Sentinel Incident Assignment Notification - Incident Number:  @{body('Update_incident')?['properties']?['incidentNumber']}",
                                                            "To": "@body('Update_incident')?['properties']?['owner']?['email']"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['office365']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/v2/Mail"
                                                    }
                                                },
                                                "Update_incident": {
                                                    "runAfter": {
                                                        "Compose": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "incidentArmId": "@{items('For_each_IncidentList')}",
                                                            "owner": "@{body('Run_query_and_list_results_-_Get_user_with_assignment')['value'][variables('LoopIndex')]['User']}",
                                                            "ownerAction": "Assign"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                            }
                                                        },
                                                        "method": "put",
                                                        "path": "/Incidents"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Run_query_and_list_results_-_Get_user_with_assignment": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach",
                                            "runtimeConfiguration": {
                                                "concurrency": {
                                                    "repetitions": 1
                                                }
                                            }
                                        },
                                        "Run_query_and_list_results_-_Get_user_with_assignment": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": "let ShiftUsers= datatable(User:string)\n@{variables('User')}\n| serialize rn=row_number();\nlet ShiftStartTime= datatable(StartTime:datetime)\n@{variables('ShiftStartTime')}\n| serialize rn=row_number();\nlet Shifts =(\nShiftUsers\n| join kind = inner ShiftStartTime on $left.rn== $right.rn\n| project-away rn,rn1);\nSecurityIncident\n| extend UserID = tostring(parse_json(Owner).objectId)\n| where isnotempty(UserID)\n| summarize arg_max(TimeGenerated,*) by IncidentName\n| project IncidentName, UserID, CreatedTime \n| join kind=rightouter Shifts on $left.UserID == $right.User\n| extend CurrentShifts =iif(isempty(CreatedTime),1, iif(todatetime(CreatedTime)>=todatetime(StartTime),1,0 ))\n| summarize Count = (sumif(CurrentShifts, isnotempty(CreatedTime))) by User\n| sort by Count asc ",
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/queryData",
                                                "queries": {
                                                    "resourcegroups": "@variables('Azure Sentinel Resource Group')",
                                                    "resourcename": "@variables('Azure Sentinel Workspace Name')",
                                                    "resourcetype": "Log Analytics Workspace",
                                                    "subscriptions": "@variables('Azure Sentinel Subscription ID')",
                                                    "timerange": "Last 24 hours"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "For_each_Shifts_list": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "greater": [
                                                    "@length(variables('User'))",
                                                    0
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "For_each_Shifts_list": {
                                    "foreach": "@body('List_all_Shifts')?['value']",
                                    "actions": {
                                        "Condition_-_Start_and_End_date": {
                                            "actions": {
                                                "Append_to_ShiftStartTime_array_variable": {
                                                    "runAfter": {
                                                        "Append_to_User_array_variable": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "AppendToArrayVariable",
                                                    "inputs": {
                                                        "name": "ShiftStartTime",
                                                        "value": "@items('For_each_Shifts_list')?['sharedShift']?['startDateTime']"
                                                    }
                                                },
                                                "Append_to_User_array_variable": {
                                                    "runAfter": {},
                                                    "type": "AppendToArrayVariable",
                                                    "inputs": {
                                                        "name": "User",
                                                        "value": "@items('For_each_Shifts_list')?['userId']"
                                                    }
                                                }
                                            },
                                            "runAfter": {},
                                            "expression": {
                                                "and": [
                                                    {
                                                        "lessOrEquals": [
                                                            "@ticks(formatDateTime(items('For_each_Shifts_list')?['sharedShift']?['startDateTime']))",
                                                            "@ticks(formatDateTime(utcNow()))"
                                                        ]
                                                    },
                                                    {
                                                        "greaterOrEquals": [
                                                            "@ticks(formatDateTime(items('For_each_Shifts_list')?['sharedShift']?['endDateTime']))",
                                                            "@ticks(formatDateTime(addHours(utcNow(),variables('ExpectedWorkHoursPerIncident'))))"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "runAfter": {
                                        "List_all_Shifts": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "List_all_Shifts": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['shifts']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/v1.0/teams/@{encodeURIComponent('Select Shifts Schedule')}/schedule/shifts",
                                        "queries": {
                                            "endTime": "@{addDays(utcNow(),1)}"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_Incident": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('IncidentList'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "For_each_Incident": {
                            "foreach": "@body('Parse_HTTP_-_Get_Incidents')?['value']",
                            "actions": {
                                "Condition_-_Check_Incident_Owner": {
                                    "actions": {
                                        "Append_to_IncidentList_array_variable": {
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "IncidentList",
                                                "value": "@items('For_each_Incident')?['id']"
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@items('For_each_Incident')?['properties']?['owner']?['objectId']",
                                                    null
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "Parse_HTTP_-_Get_Incidents": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "HTTP_-_Get_Incidents": {
                            "runAfter": {
                                "Initialize_variable_-_LoopIndex": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "type": "ManagedServiceIdentity"
                                },
                                "method": "GET",
                                "uri": "https://management.azure.com/subscriptions/d1898b28-20ea-4b3c-9529-e39e5556c480/resourceGroups/tatecksi_rg/providers/Microsoft.OperationalInsights/workspaces/tatecksi/providers/Microsoft.SecurityInsights/Incidents?api-version=2020-01-01&$filter=(properties/createdTimeUtc ge @{subtractFromTime(utcNow(),variables('IncidentLookback_Minutes'),'Minute')} and properties/status ne 'Closed')"
                            }
                        },
                        "Initialize_variable_-_ExpectedWorkHoursPerIncident": {
                            "runAfter": {
                                "Initialize_variable_-_IncidentLookback_Minutes": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ExpectedWorkHoursPerIncident",
                                        "type": "integer",
                                        "value": 0
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_IncidentList": {
                            "runAfter": {
                                "Initialize_variable_-_ShiftStartTime": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IncidentList",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_IncidentLookback_Minutes": {
                            "runAfter": {
                                "Initialize_variable_-_WorkspaceName_-_(To_be_configured)": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IncidentLookback_Minutes",
                                        "type": "integer",
                                        "value": 180
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_LoopIndex": {
                            "runAfter": {
                                "Initialize_variable_-_IncidentList": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "LoopIndex",
                                        "type": "integer",
                                        "value": 0
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_ResourceGroup_-_(To_be_configured)": {
                            "runAfter": {
                                "Initialize_variable_-_SubscriptionID_-_(To_be_configured)": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Azure Sentinel Resource Group",
                                        "type": "string",
                                        "value": "[parameters('Azure Sentinel Resource Group')]"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_ShiftStartTime": {
                            "runAfter": {
                                "Initialize_variable_-_User": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ShiftStartTime",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_SubscriptionID_-_(To_be_configured)": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Azure Sentinel Subscription ID",
                                        "type": "string",
                                        "value": "[parameters('Azure Sentinel Subscription ID')]"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_User": {
                            "runAfter": {
                                "Initialize_variable_-_ExpectedWorkHoursPerIncident": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "User",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_WorkspaceName_-_(To_be_configured)": {
                            "runAfter": {
                                "Initialize_variable_-_ResourceGroup_-_(To_be_configured)": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Azure Sentinel Workspace Name",
                                        "type": "string",
                                        "value": "[parameters('Azure Sentinel Workspace Name')]"
                                    }
                                ]
                            }
                        },
                        "Parse_HTTP_-_Get_Incidents": {
                            "runAfter": {
                                "HTTP_-_Get_Incidents": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('HTTP_-_Get_Incidents')",
                                "schema": {
                                    "properties": {
                                        "value": {
                                            "items": {
                                                "properties": {
                                                    "etag": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "properties": {
                                                        "properties": {
                                                            "additionalData": {
                                                                "properties": {
                                                                    "alertProductNames": {
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "alertsCount": {
                                                                        "type": "integer"
                                                                    },
                                                                    "bookmarksCount": {
                                                                        "type": "integer"
                                                                    },
                                                                    "commentsCount": {
                                                                        "type": "integer"
                                                                    },
                                                                    "tactics": {
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "createdTimeUtc": {
                                                                "type": "string"
                                                            },
                                                            "description": {
                                                                "type": "string"
                                                            },
                                                            "firstActivityTimeGenerated": {
                                                                "type": "string"
                                                            },
                                                            "firstActivityTimeUtc": {
                                                                "type": "string"
                                                            },
                                                            "incidentNumber": {
                                                                "type": "integer"
                                                            },
                                                            "incidentUrl": {
                                                                "type": "string"
                                                            },
                                                            "labels": {
                                                                "type": "array"
                                                            },
                                                            "lastActivityTimeGenerated": {
                                                                "type": "string"
                                                            },
                                                            "lastActivityTimeUtc": {
                                                                "type": "string"
                                                            },
                                                            "lastModifiedTimeUtc": {
                                                                "type": "string"
                                                            },
                                                            "owner": {
                                                                "properties": {
                                                                    "assignedTo": {},
                                                                    "email": {},
                                                                    "objectId": {},
                                                                    "userPrincipalName": {}
                                                                },
                                                                "type": "object"
                                                            },
                                                            "relatedAnalyticRuleIds": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "severity": {
                                                                "type": "string"
                                                            },
                                                            "status": {
                                                                "type": "string"
                                                            },
                                                            "title": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "name",
                                                    "etag",
                                                    "type",
                                                    "properties"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuremonitorlogs": {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogs'))]",
                                "connectionName": "[variables('AzureMonitorLogs')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                                    
                            },
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinel'))]",
                                "connectionName": "[variables('AzureSentinel')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                               
                            },
                            "office365": { 
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('office365'))]",
                                "connectionName": "[variables('office365')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                                    
                            },
                            "shifts": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('Shifts'))]",
                                "connectionName": "[variables('Shifts')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/shifts')]"
                                
                            }
                        }
                    }
                }
            }
        }
    ]
}
